name: Pipelines for EKS Project

on:
    workflow_dispatch:
        inputs:
          confirmation:
            description: 'Type "yes" to confirm deployment'
            required: true
            default: 'no'

jobs: 
  deploy:
    timeout-minutes: 120
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com

      - name: Build Docker image
        run: |
          cd app
          ECR_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com/eks-project:latest
          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV
          docker build -t $ECR_URI .

      - name: Scan Docker image with Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
          ECR_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com/eks-project:latest
          trivy image --severity HIGH,CRITICAL $ECR_URI

      - name: Push Docker image
        run: |
          docker push $ECR_URI

      - name: Install Terraform
        run: |
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update && sudo apt-get install -y terraform

      - name: Install TFLint
        run: curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

      - name: TFLint Check
        run: tflint --init && tflint ./terra

      - name: Terraform Init
        working-directory: ./terra
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terra
        run: terraform validate

      - name: Terraform Apply
        working-directory: ./infra
        run: terraform apply --auto-approve

        
