name: Deploy Helm Charts

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Type "yes" to confirm deployment'
        required: true
        default: 'no'

jobs:
  deploy:
    name: Deploy Helm Charts
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Set up Kubernetes
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Configure kubectl for EKS
      run: |
        aws eks update-kubeconfig --region eu-west-2 --name eks-cluster

    - name: Add Helm Repositories
      run: |
        helm repo add jetstack https://charts.jetstack.io
        helm repo add bitnami https://charts.bitnami.com/bitnami
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        helm repo add argo https://argoproj.github.io/argo-helm
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo add grafana https://grafana.github.io/helm-charts
        helm repo update

    - name: Install NGINX Ingress Controller
      run: |
        helm install nginx-ingress ingress-nginx/ingress-nginx --namespace nginx-ingress --create-namespace 

    - name: Install Cert-Manager
      run: |
        helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --set installCRDs=true --values=helm_values/cert-manager.yaml
        kubectl apply -f cert-man/issuer.yaml

    - name: Install External-DNS
      run: |
        helm install external-dns bitnami/external-dns --namespace external-dns --create-namespace --values=helm_values/external-dns.yaml

    - name: Install ArgoCD
      run: |
        helm install argocd argo/argo-cd --namespace argocd --create-namespace --values=helm_values/argocd.yaml
        kubectl apply -f ingress/argocd-ingress.yaml

    - name: Apply Wildcard Certificate for ArgoCD
      run: |
        kubectl apply -f cert-man/certificate.yaml -n argocd
        

    - name: Install Prometheus
      run: |
        helm upgrade --install prometheus prometheus-community/kube-prometheus-stack --namespace prometheus --create-namespace --values=helm_values/prometheus.yaml
        kubectl apply -f ingress/prometheus-ingress.yaml

    - name: Apply Wildcard Certificate for Prometheus
      run: |
        kubectl apply -f cert-man/certificate.yaml -n prometheus

    - name: Install Grafana
      run: |
        helm upgrade --install grafana grafana/grafana --namespace grafana --create-namespace --values=helm_values/grafana.yaml
        kubectl apply -f ingress/grafana-ingress.yaml

    - name: Apply Wildcard Certificate for Grafana
      run: |
        kubectl apply -f cert-man/certificate.yaml -n grafana

    - name: Install Custom Application (Threat Composer)
      run: |
        helm install threat-composer ./threat-composer --namespace threat-namespace --create-namespace
        kubectl apply -f cert-man/certificate.yaml -n threat-namespace


    - name: Display Application URLs
      run: |
        echo "Your application is accessible at: http://labs.mustafamirreh.com"
        echo "ArgoCD is accessible at: https://argocd.labs.mustafamirreh.com"
        echo -n "Your ArgoCD password is: "; kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 --decode; echo
        echo "Prometheus is accessible at: https://prometheus.labs.mustafamirreh.com"
        echo "Grafana is accessible at: https://grafana.labs.mustafamirreh.com"
